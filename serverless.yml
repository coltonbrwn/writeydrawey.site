name: writey-drawey-site

myNextApp:
  component: serverless-next.js
  inputs:
    domain: ["www", "writeydrawey.site"]
    bucket: writey-drawey-static-assets

lambdaUpdateState:
  component: "@serverless/aws-lambda"
  inputs:
    name: writey-drawey-api
    description: "post endpoint for updating game state"
    memory: 128
    timeout: 20
    code: ./backend
    handler: index.update
    runtime: nodejs12.x
    region: us-east-1

lambdaGetState:
  component: "@serverless/aws-lambda"
  inputs:
    name: writey-drawey-game-state
    description: "polling endpoint for fetching game state"
    memory: 1024
    timeout: 4
    code: ./backend
    handler: index.get
    runtime: nodejs12.x
    region: us-east-1

lambdaCors:
  component: "@serverless/aws-lambda"
  inputs:
    name: writey-drawey-api-cors
    description: "general purpose CORS endpoint"
    memory: 128
    timeout: 20
    code: ./backend
    handler: index.cors
    runtime: nodejs12.x
    region: us-east-1

gameApiGateway:
  component: "@serverless/aws-api-gateway"
  inputs:
    description: Writey Drawey
    cors: true
    endpoints:
      - path: /api
        method: POST
        function: ${lambdaUpdateState.arn}
      - path: /state
        method: GET
        function: ${lambdaGetState.arn}
      - path: /api
        method: OPTIONS
        function: ${lambdaCors.arn}

gamesTable:
  component: '@serverless/aws-dynamodb'
  inputs:
    name: writey-drawey-games # optional
    attributeDefinitions:
      - AttributeName: id
        AttributeType: S
    keySchema:
      - AttributeName: id
        KeyType: HASH
    region: us-east-1

imageBucket:
  component: "@serverless/aws-s3"
  inputs:
    name: writey-drawey-images
    region: us-east-1
    cors:
      CORSRules:
      - AllowedHeaders:
        - "*"
        AllowedMethods:
        - PUT
        - POST
        - DELETE
        AllowedOrigins:
        - http://writeydrawey.site
        MaxAgeSeconds: 3000
